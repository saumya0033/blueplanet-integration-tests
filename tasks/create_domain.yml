- name: validate title has no spaces
  fail:
    msg: "Domain title must not contain spaces"
  when: title.find(" ") > 0
- name: validate title has no dashes
  fail:
    msg: "Domain title must not contain dashes"
  when: title.find("-") > 0
- name: Clear the bp_domain_id Fact
  set_fact:
    bp_domain_id: ""
- name: Clear the domain Fact
  set_fact:
    bp_domain: {}
- import_tasks: get_resourceProvider_by_domainType.yml
- import_tasks: get_domains_by_domainType.yml
- name: check domain exists
  assert:
    that: (bp_domains | length = 0)
    fail_msg: "ERROR: domain already exists.  Multiple domain creation requires bp_integration_tests_multi_domain=true"
    success_msg: undefined
  when: (bp_integration_tests_multi_domain == false)
- name: 'create domain'
  uri:
    url: '{{ bp_integration_tests_server }}/bpocore/market/api/v1/domains'
    method: POST
    body:
      title: "{{ title }}"
      description: "{{ description }}"
      accessUrl: '{{ accessUrl }}'
      address: "{{ address }}"
      properties: "{{ properties }}"
      rpId: '{{ bp_resourceProvider_id }}'
    body_format: json
    validate_certs: no
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ bp_integration_tests_token }}"
    status_code:
      - 200
      - 201
      - 202
      - 204
  register: result
- name: set the bp_domain_id Fact
  set_fact:
    cacheable: true
    bp_domain_id: "{{ result.json['id'] }}"
- name: Update the bp_keyed_domains Fact
  vars:
    unkeyed_domain:
    - key: "{{ title }}"
      value: "{{ result.json['id'] }}"  
    tmp: "{{ unkeyed_domain | items2dict(key_name='key', value_name='value') }}"
  set_fact:
    bp_keyed_domains: "{{ bp_keyed_domains | combine(tmp) }}"
    cacheable: true
- import_tasks: await_domain_onboard.yml
